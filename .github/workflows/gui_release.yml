name: Create Release

on:
  push:
    branches-ignore:
      - '**'
    tags:
      - 'v[0-9]+.[0-9]+.[0-9]+'
      - 'v[0-9]+.[0-9]+.[0-9]+rc[0-9]+'

jobs:
  build-binaries:
    defaults:
      run:
        shell: bash -l {0}

    strategy:
      matrix:
        os: [ windows-latest, ubuntu-latest ]

    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python 3.10
        uses: actions/setup-python@v5
        with:
          python-version: "3.10"

      - name: Setup Poetry
        uses: abatilo/actions-poetry@v3.0.0
        with:
          poetry-version: 1.8.2

      - name: Install dependencies
        run: |
          poetry update
          poetry version ${{ env.tag }}
          poetry run pip install --upgrade pip
          poetry run pip install --upgrade setuptools

      - name: Get tag
        id: tag
        run: |
          echo "tag=${GITHUB_REF#refs/tags/}" >> $GITHUB_ENV

      - name: Build Windows GUI Executable
        if: ${{ runner.os == 'Windows' }}
        run: >
          poetry run pyinstaller
          --onefile
          --windowed
          --icon='gui\resources\logo.ico'
          --add-data='gui\resources\*.ico;resources'
          --add-data="gui\resources\*.ui;resources"
          --name=EOS-EXIF-Join-${{ env.tag }}-win64
          gui/__main__.py

      - name: Build Linux GUI Executable
        if: ${{ runner.os == 'Linux' }}
        run: >
          poetry run pyinstaller
          --onefile
          --windowed
          --icon='gui/resources/logo.ico'
          --add-data='gui/resources/*.ico:resources'
          --add-data="gui/resources/*.ui:resources"
          --name=EOS-EXIF-Join-${{ env.tag }}-linux
          gui/__main__.py

      - name: Archive release artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.os }}-dist
          path: dist

  create-release:
    needs: build-binaries
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Get tag
        id: tag
        run: |
          echo "tag=${GITHUB_REF#refs/tags/}" >> $GITHUB_ENV

      - name: Detect prerelease
        id: prerelease
        run: |
          if echo ${{ env.tag }} | grep -qe '?*.*.*rc*'; then
              echo "prerelease=true" >> $GITHUB_ENV
          else
              echo "prerelease=false" >> $GITHUB_ENV
          fi

      - name: Download Windows artifacts
        uses: actions/download-artifact@v4
        with:
          name: windows-latest-dist
          path: win64-dist

      - name: Download Ubuntu artifacts
        uses: actions/download-artifact@v4
        with:
          name: ubuntu-latest-dist
          path: linux-dist

      - name: Create Release
        id: create_release
        uses: softprops/action-gh-release@v2
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          tag_name: ${{ env.tag }}
          draft: false
          prerelease: ${{ env.prerelease }}
          generate_release_notes: true
          files: |
            win64-dist/EOS-EXIF-Join-${{ env.tag }}-win64.exe
            linux-dist/EOS-EXIF-Join-${{ env.tag }}-linux
